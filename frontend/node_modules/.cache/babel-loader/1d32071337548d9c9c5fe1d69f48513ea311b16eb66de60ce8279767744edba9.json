{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dayya\\\\Downloads\\\\LeNet5Tool\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport UploadDataset from \"./UploadDataset\";\nimport DownloadModel from \"./DownloadModel\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [trainingStatus, setTrainingStatus] = useState(\"\");\n  const [trainingProgress, setTrainingProgress] = useState(0); // Progress bar percentage\n  const [numEpochs, setNumEpochs] = useState(1); // Default epochs\n  const [numClasses, setNumClasses] = useState(5); // Default to 5 classes\n  const [useGrayscale, setUseGrayscale] = useState(false); // New state for Grayscale/RGB option\n\n  const handleDatasetUpload = async file => {\n    try {\n      setTrainingStatus(\"Processing dataset...\");\n      setTrainingProgress(0);\n      if (file) {\n        // User uploaded a file\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"useGrayscale\", useGrayscale); // Include grayscale setting in form data\n\n        const uploadResponse = await axios.post(\"http://127.0.0.1:5000/upload-dataset\", formData);\n        if (uploadResponse.data.message) {\n          setTrainingStatus(uploadResponse.data.message);\n          getFirstEpochTime();\n        }\n      } else {\n        // No file uploaded, default to MNIST dataset\n        setTrainingStatus(\"No dataset uploaded. Defaulting to MNIST dataset...\");\n        const mnistResponse = await axios.post(\"http://127.0.0.1:5000/upload-dataset\", {\n          useGrayscale\n        } // Send grayscale option even for default dataset\n        );\n        if (mnistResponse.data.message) {\n          setTrainingStatus(mnistResponse.data.message);\n          getFirstEpochTime();\n        }\n      }\n    } catch (error) {\n      console.error(\"Error processing dataset:\", error);\n      setTrainingStatus(\"Failed to process dataset. Please try again.\");\n    }\n  };\n  const getFirstEpochTime = async () => {\n    try {\n      setTrainingStatus(\"Calculating first epoch duration...\");\n      const epochTimeResponse = await axios.post(\"http://127.0.0.1:5000/epoch-time\", {\n        num_classes: numClasses\n      } // Ensure num_classes is sent\n      );\n      if (epochTimeResponse.data.epoch_time) {\n        const epochTime = epochTimeResponse.data.epoch_time;\n        setTrainingStatus(`First epoch took ${epochTime.toFixed(2)} seconds.`);\n        startTraining(epochTime);\n      }\n    } catch (error) {\n      console.error(\"Error calculating first epoch time:\", error);\n      setTrainingStatus(\"Failed to calculate first epoch time. Please try again.\");\n    }\n  };\n  const startTraining = async epochTime => {\n    try {\n      setTrainingStatus(\"Training started...\");\n      let estimatedTotalTime = epochTime * numEpochs;\n\n      // Simulate progress updates\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += 100 / estimatedTotalTime * epochTime;\n        if (progress >= 99) {\n          clearInterval(interval);\n        } else {\n          setTrainingProgress(progress);\n        }\n      }, epochTime * 1000);\n      const trainResponse = await axios.post(\"http://127.0.0.1:5000/train\", {\n        num_epochs: numEpochs,\n        num_classes: numClasses // Send number of classes to backend\n      });\n      if (trainResponse.data.message) {\n        setTrainingStatus(\"Training completed!\");\n        setTrainingProgress(100); // Training completed\n        clearInterval(interval); // Ensure interval is cleared\n      }\n    } catch (error) {\n      console.error(\"Error during training:\", error);\n      setTrainingStatus(\"Training failed. Please try again.\");\n      setTrainingProgress(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"#4caf50\",\n          fontSize: \"2.5rem\",\n          margin: \"20px 0\"\n        },\n        children: \"LeNet5 Based CNN Model Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Mode Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontSize: \"1rem\",\n              color: useGrayscale ? \"#555\" : \"#4caf50\"\n            },\n            children: \"RGB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useGrayscale,\n            onChange: () => setUseGrayscale(!useGrayscale),\n            style: {\n              transform: \"scale(1.5)\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              fontSize: \"1rem\",\n              color: useGrayscale ? \"#4caf50\" : \"#555\"\n            },\n            children: \"Grayscale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Epochs (Test/Train Iterations)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: numEpochs,\n          onChange: e => setNumEpochs(e.target.value),\n          style: {\n            padding: \"10px\",\n            fontSize: \"1rem\",\n            width: \"80px\",\n            marginBottom: \"20px\",\n            textAlign: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Number of Classes in Dataset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          value: numClasses,\n          onChange: e => setNumClasses(e.target.value),\n          style: {\n            padding: \"10px\",\n            fontSize: \"1rem\",\n            width: \"80px\",\n            marginBottom: \"20px\",\n            textAlign: \"center\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Upload Dataset Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadDataset, {\n          onUpload: handleDatasetUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Training Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            backgroundColor: \"#f4f4f4\",\n            borderRadius: \"10px\",\n            marginTop: \"10px\",\n            border: \"1px solid #ddd\",\n            padding: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${trainingProgress}%`,\n              backgroundColor: \"#4caf50\",\n              height: \"20px\",\n              borderRadius: \"10px\",\n              transition: \"width 0.5s\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"10px\",\n            fontSize: \"1rem\",\n            color: \"#555\"\n          },\n          children: trainingStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: \"#3f51b5\",\n            fontSize: \"1.8rem\"\n          },\n          children: \"Download Trained Model Here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DownloadModel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OuquqGc9nY1U0q71Wuhk1qnn5co=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","UploadDataset","DownloadModel","axios","jsxDEV","_jsxDEV","App","_s","trainingStatus","setTrainingStatus","trainingProgress","setTrainingProgress","numEpochs","setNumEpochs","numClasses","setNumClasses","useGrayscale","setUseGrayscale","handleDatasetUpload","file","formData","FormData","append","uploadResponse","post","data","message","getFirstEpochTime","mnistResponse","error","console","epochTimeResponse","num_classes","epoch_time","epochTime","toFixed","startTraining","estimatedTotalTime","progress","interval","setInterval","clearInterval","trainResponse","num_epochs","className","children","style","color","fontSize","margin","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","type","checked","onChange","transform","min","value","e","target","padding","width","marginBottom","textAlign","onUpload","backgroundColor","borderRadius","marginTop","border","height","transition","_c","$RefreshReg$"],"sources":["C:/Users/dayya/Downloads/LeNet5Tool/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport UploadDataset from \"./UploadDataset\";\r\nimport DownloadModel from \"./DownloadModel\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [trainingStatus, setTrainingStatus] = useState(\"\");\r\n  const [trainingProgress, setTrainingProgress] = useState(0); // Progress bar percentage\r\n  const [numEpochs, setNumEpochs] = useState(1); // Default epochs\r\n  const [numClasses, setNumClasses] = useState(5); // Default to 5 classes\r\n  const [useGrayscale, setUseGrayscale] = useState(false); // New state for Grayscale/RGB option\r\n\r\n  const handleDatasetUpload = async (file) => {\r\n    try {\r\n      setTrainingStatus(\"Processing dataset...\");\r\n      setTrainingProgress(0);\r\n  \r\n      if (file) {\r\n        // User uploaded a file\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"useGrayscale\", useGrayscale); // Include grayscale setting in form data\r\n  \r\n        const uploadResponse = await axios.post(\r\n          \"http://127.0.0.1:5000/upload-dataset\",\r\n          formData\r\n        );\r\n  \r\n        if (uploadResponse.data.message) {\r\n          setTrainingStatus(uploadResponse.data.message);\r\n          getFirstEpochTime();\r\n        }\r\n      } else {\r\n        // No file uploaded, default to MNIST dataset\r\n        setTrainingStatus(\"No dataset uploaded. Defaulting to MNIST dataset...\");\r\n        const mnistResponse = await axios.post(\r\n          \"http://127.0.0.1:5000/upload-dataset\",\r\n          { useGrayscale } // Send grayscale option even for default dataset\r\n        );\r\n  \r\n        if (mnistResponse.data.message) {\r\n          setTrainingStatus(mnistResponse.data.message);\r\n          getFirstEpochTime();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error processing dataset:\", error);\r\n      setTrainingStatus(\"Failed to process dataset. Please try again.\");\r\n    }\r\n  };\r\n  \r\n  const getFirstEpochTime = async () => {\r\n    try {\r\n      setTrainingStatus(\"Calculating first epoch duration...\");\r\n      const epochTimeResponse = await axios.post(\r\n        \"http://127.0.0.1:5000/epoch-time\",\r\n        { num_classes: numClasses } // Ensure num_classes is sent\r\n      );\r\n\r\n      if (epochTimeResponse.data.epoch_time) {\r\n        const epochTime = epochTimeResponse.data.epoch_time;\r\n        setTrainingStatus(`First epoch took ${epochTime.toFixed(2)} seconds.`);\r\n        startTraining(epochTime);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error calculating first epoch time:\", error);\r\n      setTrainingStatus(\r\n        \"Failed to calculate first epoch time. Please try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const startTraining = async (epochTime) => {\r\n    try {\r\n      setTrainingStatus(\"Training started...\");\r\n      let estimatedTotalTime = epochTime * numEpochs;\r\n\r\n      // Simulate progress updates\r\n      let progress = 0;\r\n      const interval = setInterval(() => {\r\n        progress += (100 / estimatedTotalTime) * epochTime;\r\n        if (progress >= 99) {\r\n          clearInterval(interval);\r\n        } else {\r\n          setTrainingProgress(progress);\r\n        }\r\n      }, epochTime * 1000);\r\n\r\n      const trainResponse = await axios.post(\"http://127.0.0.1:5000/train\", {\r\n        num_epochs: numEpochs,\r\n        num_classes: numClasses, // Send number of classes to backend\r\n      });\r\n\r\n      if (trainResponse.data.message) {\r\n        setTrainingStatus(\"Training completed!\");\r\n        setTrainingProgress(100); // Training completed\r\n        clearInterval(interval); // Ensure interval is cleared\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error during training:\", error);\r\n      setTrainingStatus(\"Training failed. Please try again.\");\r\n      setTrainingProgress(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 style={{ color: \"#4caf50\", fontSize: \"2.5rem\", margin: \"20px 0\" }}>\r\n          LeNet5 Based CNN Model Generator\r\n        </h1>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>Mode Selection</h2>\r\n          <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n            <label\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                color: useGrayscale ? \"#555\" : \"#4caf50\",\r\n              }}\r\n            >\r\n              RGB\r\n            </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={useGrayscale}\r\n              onChange={() => setUseGrayscale(!useGrayscale)}\r\n              style={{ transform: \"scale(1.5)\" }}\r\n            />\r\n            <label\r\n              style={{\r\n                fontSize: \"1rem\",\r\n                color: useGrayscale ? \"#4caf50\" : \"#555\",\r\n              }}\r\n            >\r\n              Grayscale\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>\r\n            Epochs (Test/Train Iterations)\r\n          </h2>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={numEpochs}\r\n            onChange={(e) => setNumEpochs(e.target.value)}\r\n            style={{\r\n              padding: \"10px\",\r\n              fontSize: \"1rem\",\r\n              width: \"80px\",\r\n              marginBottom: \"20px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>\r\n            Number of Classes in Dataset\r\n          </h2>\r\n          <input\r\n            type=\"number\"\r\n            min=\"1\"\r\n            value={numClasses}\r\n            onChange={(e) => setNumClasses(e.target.value)}\r\n            style={{\r\n              padding: \"10px\",\r\n              fontSize: \"1rem\",\r\n              width: \"80px\",\r\n              marginBottom: \"20px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>\r\n            Upload Dataset Here\r\n          </h2>\r\n          <UploadDataset onUpload={handleDatasetUpload} />\r\n        </div>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>\r\n            Training Progress\r\n          </h2>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"#f4f4f4\",\r\n              borderRadius: \"10px\",\r\n              marginTop: \"10px\",\r\n              border: \"1px solid #ddd\",\r\n              padding: \"5px\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: `${trainingProgress}%`,\r\n                backgroundColor: \"#4caf50\",\r\n                height: \"20px\",\r\n                borderRadius: \"10px\",\r\n                transition: \"width 0.5s\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <p style={{ marginTop: \"10px\", fontSize: \"1rem\", color: \"#555\" }}>\r\n            {trainingStatus}\r\n          </p>\r\n        </div>\r\n        <div className=\"section\">\r\n          <h2 style={{ color: \"#3f51b5\", fontSize: \"1.8rem\" }}>\r\n            Download Trained Model Here!\r\n          </h2>\r\n          <DownloadModel />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}